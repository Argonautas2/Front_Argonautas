{"version":3,"sources":["context/authContext.js","context/userContext.js","components/PrivateComponent.jsx","components/Sidebar.jsx","graphql/auth/mutations.js","layouts/PrivateLayout.jsx","pages/Index.jsx","pages/Page2.jsx","pages/category1/Index.jsx","pages/category1/CategoryPage1.jsx","graphql/usuarios/queries.js","utils/enums.js","components/PrivateRoute.jsx","pages/usuarios/index.jsx","components/Input.jsx","components/ButtonLoading.jsx","hooks/useFormData.js","graphql/usuarios/mutations.js","components/DropDown.jsx","pages/usuarios/editar.jsx","layouts/AuthLayout.jsx","pages/auth/register.jsx","pages/auth/login.jsx","graphql/proyectos/queries.js","graphql/proyectos/mutations.js","graphql/inscripciones/mutaciones.js","components/Accordion.jsx","pages/proyectos/Index.jsx","context/objContext.js","pages/proyectos/NuevoProyecto.jsx","graphql/inscripciones/queries.js","pages/inscripciones/index.jsx","utils/uploadFromData.js","pages/profile.jsx","pages/avances/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","UserContext","useUser","PrivateComponent","roleList","children","userData","includes","rol","SidebarLinks","className","to","title","icon","Logout","setToken","type","onClick","Logo","src","alt","ResponsiveSidebar","id","SidebarRoute","isActive","SidebarRouteImagen","foto","Sidebar","useState","open","setOpen","REGISTRO","gql","LOGIN","REFRESH_TOKEN","PrivateLayout","navigate","useNavigate","loadingAuth","setLoadingAuth","useMutation","refreshToken","dataMutation","data","loadingMutation","loading","useEffect","token","Index","Page2","IndexCategory1","Category1","GET_USUARIOS","GET_USUARIO","Enum_Rol","ADMINISTRADOR","ESTUDIANTE","LIDER","Enum_EstadoUsuario","PENDIENTE","AUTORIZADO","NO_AUTORIZADO","Enum_EstadoProyecto","ACTIVO","INACTIVO","Enum_TipoObjetivo","GENERAL","ESPECIFICO","PrivateRoute","IndexUsuarios","useQuery","error","toast","Usuarios","map","u","nombre","apellido","correo","identificacion","estado","_id","Input","label","name","defaultValue","required","htmlFor","ButtonLoading","disabled","text","height","width","useFormData","initial","form","useRef","formData","setFormData","updateFormData","fd","FormData","current","obj","forEach","value","key","split","p1","p2","p3","Object","keys","getFormData","EDITAR_USUARIO","EDITAR_PERFIL","DropDown","options","selectedValue","setSelectedValue","optionsSelect","entries","onChange","e","target","o","nanoid","EditarUsuario","useParams","variables","queryData","queryError","queryLoading","editarUsuario","mutationData","mutationLoading","mutationError","success","onSubmit","preventDefault","ref","Usuario","length","AuthLayout","Register","registro","Login","login","PROYECTOS","EDITAR_PROYECTO","CREAR_PROYECTO","EDITAR_OBJETIVO","ELIMINAR_OBJETIVO","CREAR_INSCRIPCION","APROBAR_INSCRIPCION","AccordionStyled","styled","props","Accordion","backgroundColor","AccordionSummaryStyled","AccordionSummary","AccordionDetailsStyled","AccordionDetails","AccordionProyecto","proyecto","showDialog","setShowDialog","expandIcon","idProyecto","inscripciones","lider","objetivos","objetivo","index","tipo","descripcion","Dialog","onClose","FormEditProyecto","editarProyecto","campos","Objetivo","showEditDialog","setShowEditDialog","refetchQueries","query","eliminarObjetivo","dataMutationEliminar","eliminarLoading","idObjetivo","EditarObjetivo","editarObjetivo","indexObjetivo","catch","InscripcionProyecto","estadoInscripcion","setEstadoInscripcion","crearInscripcion","flt","filter","el","estudiante","IndexProyectos","Proyectos","ObjContext","Objetivos","listaObjetivos","setListaObjetivos","maxObjetivos","setMaxObjetivos","componenteObjetivoAgregado","Provider","FormObjetivo","NuevoProyecto","listaUsuarios","setListaUsuarios","filtro","crearProyecto","lu","elemento","values","presupuesto","parseFloat","GET_INSCRIPCIONES","AccordionInscripcion","titulo","refetch","inscripcion","Inscripcion","aprobarInscripcion","aprobarInscripcionId","IndexInscripciones","Inscripciones","uploadFormData","a","formDataCopy","Promise","all","field","prototype","isPrototypeOf","call","File","dt","append","method","url","axios","request","then","response","Profile","editFoto","setEditFoto","setUserData","editarPerfil","submitForm","formUploaded","IndexAvance","httpLink","createHttpLink","uri","authLink","setContext","_","headers","JSON","parse","localStorage","getItem","authorization","client","ApolloClient","cache","InMemoryCache","link","concat","App","authToken","setAuthToken","decoded","jwt_decode","ApolloProvider","setItem","stringify","removeItem","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f35de5f.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const UserContext = createContext(null);\r\n\r\nexport const useUser = () => useContext(UserContext);\r\n","import { useUser } from 'context/userContext';\r\nimport React from 'react';\r\n\r\nconst PrivateComponent = ({ roleList, children }) => {\r\n  const { userData } = useUser();\r\n\r\n  if (roleList.includes(userData.rol)) {\r\n    return children;\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default PrivateComponent;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAuth } from 'context/authContext';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\nimport { useUser } from 'context/userContext';\r\n\r\nconst SidebarLinks = () => (\r\n  <ul className='mt-12'>\r\n    <SidebarRouteImagen to='/perfil' title='Perfil' icon='fas fa-user' />\r\n    <SidebarRoute to='' title='Inicio' icon='fas fa-home' />\r\n    <PrivateComponent roleList={['ADMINISTRADOR']}>\r\n      <SidebarRoute to='/usuarios' title='Usuarios' icon='fas fa-user' />\r\n    </PrivateComponent>\r\n    <SidebarRoute to='/proyectos' title='Proyectos' icon='fas fa-smile-wink' />\r\n    <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}>\r\n      <SidebarRoute\r\n        to='/inscripciones'\r\n        title='Aprobacion Inscripciones'\r\n        icon='fas fa-users'\r\n      />\r\n    </PrivateComponent>\r\n    <SidebarRoute to='/page2' title='Pagina2' icon='fas fa-smile-wink' />\r\n    <SidebarRoute to='/category1' title='Catego 1' icon='fab fa-amazon' />\r\n    <SidebarRoute to='/category1/page1' title='Test' icon='fas fa-car' />\r\n    <Logout />\r\n  </ul>\r\n);\r\n\r\nconst Logout = () => {\r\n  const { setToken } = useAuth();\r\n  const deleteToken = () => {\r\n    setToken(null);\r\n  };\r\n  return (\r\n    <li>\r\n      <button type='button' onClick={() => deleteToken()}>\r\n        <NavLink to='/auth/login' className='sidebar-route text-red-700'>\r\n          <div className='flex items-center'>\r\n            <i className='fas fa-sign-out-alt' />\r\n            <span className='text-sm  ml-2'>Cerrar Sesión</span>\r\n          </div>\r\n        </NavLink>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nconst Logo = () => (\r\n  <div className='py-3 w-full flex flex-col items-center justify-center'>\r\n    <img src='logo.png' alt='Logo' className='h-16' />\r\n    <span className='my-2 text-xl font-bold text-center'>\r\n      Título de Mi Aplicación\r\n    </span>\r\n  </div>\r\n);\r\n\r\nconst Sidebar = () => {\r\n  const [open, setOpen] = useState(true);\r\n  return (\r\n    <div className='flex flex-col md:flex-row flex-no-wrap md:h-full'>\r\n      {/* Sidebar starts */}\r\n      <div className='sidebar hidden md:flex'>\r\n        <div className='px-8'>\r\n          <Logo />\r\n          <SidebarLinks />\r\n        </div>\r\n      </div>\r\n      <div className='flex md:hidden w-full justify-between bg-gray-800 p-2 text-white'>\r\n        <button type='button' onClick={() => setOpen(!open)}>\r\n          <i className={`fas fa-${open ? 'times' : 'bars'}`} />\r\n        </button>\r\n        <i className='fas fa-home' />\r\n      </div>\r\n      {open && <ResponsiveSidebar />}\r\n      {/* Sidebar ends */}\r\n    </div>\r\n  );\r\n};\r\nconst ResponsiveSidebar = () => (\r\n  <div>\r\n    <div\r\n      className='sidebar h-full z-40 absolute md:h-full sm:hidden transition duration-150 ease-in-out'\r\n      id='mobile-nav'\r\n    >\r\n      <div className='px-8'>\r\n        <Logo />\r\n        <SidebarLinks />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nconst SidebarRoute = ({ to, title, icon }) => (\r\n  <li>\r\n    <NavLink\r\n      to={to}\r\n      className={({ isActive }) =>\r\n        isActive\r\n          ? 'sidebar-route text-white bg-indigo-700'\r\n          : 'sidebar-route text-gray-900 hover:text-white hover:bg-indigo-400'\r\n      }\r\n    >\r\n      <div className='flex items-center'>\r\n        <i className={icon} />\r\n        <span className='text-sm  ml-2'>{title}</span>\r\n      </div>\r\n    </NavLink>\r\n  </li>\r\n);\r\nconst SidebarRouteImagen = ({ to, title, icon }) => {\r\n  const { userData } = useUser();\r\n  return (\r\n    <li>\r\n      <NavLink\r\n        to={to}\r\n        className={({ isActive }) =>\r\n          isActive\r\n            ? 'sidebar-route text-white bg-indigo-700'\r\n            : 'sidebar-route text-gray-900 hover:text-white hover:bg-indigo-400'\r\n        }\r\n      >\r\n        <div className='flex items-center'>\r\n          {userData.foto ? (\r\n            <img\r\n              className='h-8 w-8 rounded-full'\r\n              src={userData.foto}\r\n              alt='foto'\r\n            />\r\n          ) : (\r\n            <i className={icon} />\r\n          )}\r\n          <span className='text-sm  ml-2'>{title}</span>\r\n        </div>\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst REGISTRO = gql`\r\n  mutation Registro(\r\n    $nombre: String!\r\n    $apellido: String!\r\n    $identificacion: String!\r\n    $correo: String!\r\n    $rol: Enum_Rol!\r\n    $password: String!\r\n  ) {\r\n    registro(\r\n      nombre: $nombre\r\n      apellido: $apellido\r\n      identificacion: $identificacion\r\n      correo: $correo\r\n      rol: $rol\r\n      password: $password\r\n    ) {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\nconst LOGIN = gql`\r\n  mutation Login($correo: String!, $password: String!) {\r\n    login(correo: $correo, password: $password) {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nconst REFRESH_TOKEN = gql`\r\n  mutation RefreshToken {\r\n    refreshToken {\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport { REGISTRO, LOGIN, REFRESH_TOKEN };\r\n","import Sidebar from 'components/Sidebar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useAuth } from 'context/authContext';\r\nimport { REFRESH_TOKEN } from 'graphql/auth/mutations';\r\nimport { useNavigate, Outlet } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst PrivateLayout = () => {\r\n  const navigate = useNavigate();\r\n  const { setToken } = useAuth();\r\n  const [loadingAuth, setLoadingAuth] = useState(true);\r\n\r\n  const [refreshToken, { data: dataMutation, loading: loadingMutation }] =\r\n    useMutation(REFRESH_TOKEN);\r\n\r\n  useEffect(() => {\r\n    refreshToken();\r\n  }, [refreshToken]);\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      if (dataMutation.refreshToken.token) {\r\n        setToken(dataMutation.refreshToken.token);\r\n      } else {\r\n        setToken(null);\r\n        navigate('/auth/login');\r\n      }\r\n      setLoadingAuth(false);\r\n    }\r\n  }, [dataMutation, setToken, loadingAuth, navigate]);\r\n  if (loadingMutation || loadingAuth) return <div>Loading...</div>;\r\n  return (\r\n    <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\r\n      <Sidebar />\r\n      <div className='flex w-full h-full'>\r\n        <div className='w-full h-full  overflow-y-scroll'>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateLayout;\r\n","import React from 'react';\r\n\r\nconst Index = () => (\r\n  <div className='py-4 w-full flex flex-col items-center justify-center'>\r\n    <img src='logo.png' alt='Logo' className='h-26' />\r\n    <span className='my-2 text-xl font-bold text-center'>\r\n      ARGONAUTAS GESTION DE PROYECTOS\r\n    </span>\r\n    <span className='my-2 text-xl font-bold text-center'>\r\n      {' '}\r\n      Gestión de proyectos\r\n    </span>\r\n    <span className='my-2 text-xl font-bold text-center'> Misiontic2021</span>\r\n  </div>\r\n);\r\n\r\nexport default Index;\r\n","import React from 'react';\r\n\r\nconst Page2 = () => <div>esta es Page22</div>;\r\n\r\nexport default Page2;\r\n","import React from 'react';\r\n\r\nconst IndexCategory1 = () => <div>Index Category1</div>;\r\n\r\nexport default IndexCategory1;\r\n","import React from 'react';\r\n\r\nconst Category1 = () => <div>pagina /category/page1</div>;\r\n\r\nexport default Category1;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst GET_USUARIOS = gql`\r\n  query Query($filtro: FiltroUsuarios) {\r\n    Usuarios(filtro: $filtro) {\r\n      _id\r\n      nombre\r\n      apellido\r\n      correo\r\n      estado\r\n      identificacion\r\n      rol\r\n    }\r\n  }\r\n`;\r\nconst GET_USUARIO = gql`\r\n  query Usuario($_id: String!) {\r\n    Usuario(_id: $_id) {\r\n      _id\r\n      nombre\r\n      apellido\r\n      correo\r\n      estado\r\n      identificacion\r\n      rol\r\n      foto\r\n    }\r\n  }\r\n`;\r\nexport { GET_USUARIOS, GET_USUARIO };\r\n","const Enum_Rol = {\r\n  ADMINISTRADOR: 'Administrador',\r\n  ESTUDIANTE: 'Estudiante',\r\n  LIDER: 'Líder',\r\n};\r\n\r\nconst Enum_EstadoUsuario = {\r\n  PENDIENTE: 'Pendiente',\r\n  AUTORIZADO: 'Autorizado',\r\n  NO_AUTORIZADO: 'No autorizado',\r\n};\r\nconst Enum_EstadoProyecto = {\r\n  ACTIVO: 'Activo',\r\n  INACTIVO: 'Inactivo',\r\n};\r\nconst Enum_TipoObjetivo = {\r\n  GENERAL: 'General',\r\n  ESPECIFICO: 'Específico',\r\n};\r\n\r\nexport { Enum_Rol, Enum_EstadoUsuario, Enum_EstadoProyecto, Enum_TipoObjetivo };\r\n","import { useUser } from 'context/userContext';\r\nimport React from 'react';\r\n\r\nconst PrivateRoute = ({ roleList, children }) => {\r\n  const { userData } = useUser();\r\n\r\n  if (roleList.includes(userData.rol)) {\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <div data-testid='not-authorized' className='text-9xl text-red-500 '>\r\n      No estás autorizado para ver este sitio.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\nimport { Enum_Rol, Enum_EstadoUsuario } from 'utils/enums';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\n\r\nconst IndexUsuarios = () => {\r\n  const { data, error, loading } = useQuery(GET_USUARIOS);\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error consultando los usuarios');\r\n    }\r\n  }, [error]);\r\n  if (loading) return <div>Cargando....</div>;\r\n\r\n  return (\r\n    <PrivateRoute roleList={['ADMINISTRADOR']}>\r\n      <div>\r\n        Datos Usuarios:\r\n        <table className='tabla'>\r\n          <thead>\r\n            <tr>\r\n              <th>Nombre</th>\r\n              <th>Apellidos</th>\r\n              <th>Correo</th>\r\n              <th>Identificación</th>\r\n              <th>Rol</th>\r\n              <th>Estado</th>\r\n              <th>Editar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data && data.Usuarios ? (\r\n              <>\r\n                {data.Usuarios.map((u) => (\r\n                  <tr key={u._id}>\r\n                    <td>{u.nombre}</td>\r\n                    <td>{u.apellido}</td>\r\n                    <td>{u.correo}</td>\r\n                    <td>{u.identificacion}</td>\r\n                    <td>{Enum_Rol[u.rol]}</td>\r\n                    <td>{Enum_EstadoUsuario[u.estado]}</td>\r\n                    <td>\r\n                      <Link to={`/usuarios/editar/${u._id}`}>\r\n                        <i className='fas fa-pen text-yellow-600 hover:text-yellow-400 cursor-pointer' />\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <div>No autorizado</div>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </PrivateRoute>\r\n  );\r\n};\r\nexport default IndexUsuarios;\r\n","import React from 'react';\r\n\r\nconst Input = ({ label, name, defaultValue, type, required }) => (\r\n  <label htmlFor={name} className='flex flex-col my-3'>\r\n    <span>{label}</span>\r\n    <input\r\n      required={required}\r\n      type={type}\r\n      name={name}\r\n      className='input'\r\n      defaultValue={defaultValue}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst ButtonLoading = ({ disabled, loading, text, onClick = () => {} }) => (\r\n  <button\r\n    data-testid='button-loading'\r\n    onClick={onClick}\r\n    disabled={disabled}\r\n    type='submit'\r\n    className='bg-indigo-700 text-white font-bold text-lg py-3 px-6  rounded-xl hover:bg-indigo-500 shadow-md my-2 disabled:opacity-50 disabled:bg-gray-700'\r\n  >\r\n    {loading ? (\r\n      <ReactLoading\r\n        data-testid='loading-in-button'\r\n        type='spin'\r\n        height={30}\r\n        width={30}\r\n      />\r\n    ) : (\r\n      text\r\n    )}\r\n  </button>\r\n);\r\nexport default ButtonLoading;\r\n","import { useRef, useState } from 'react';\r\n\r\nconst useFormData = (initial) => {\r\n  const form = useRef(initial);\r\n  const [formData, setFormData] = useState({});\r\n  const getFormData = () => {\r\n    const fd = new FormData(form.current);\r\n    const obj = {};\r\n    fd.forEach((value, key) => {\r\n      if (key.includes('nested')) {\r\n        const [p1, p2, p3] = key.split('||');\r\n        if (Object.keys(obj).includes(p1)) {\r\n          if (Object.keys(obj[p1]).includes(p2)) {\r\n            obj[p1][p2][p3] = value;\r\n          } else {\r\n            obj[p1][p2] = {\r\n              [p3]: value,\r\n            };\r\n          }\r\n        } else {\r\n          obj[p1] = {\r\n            [p2]: {\r\n              [p3]: value,\r\n            },\r\n          };\r\n        }\r\n      } else {\r\n        obj[key] = value;\r\n      }\r\n    });\r\n\r\n    return obj;\r\n  };\r\n  const updateFormData = () => {\r\n    setFormData(getFormData());\r\n  };\r\n  return { form, formData, updateFormData };\r\n};\r\nexport default useFormData;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst EDITAR_USUARIO = gql`\r\n  mutation EditarUsuario(\r\n    $_id: String!\r\n    $nombre: String!\r\n    $apellido: String!\r\n    $identificacion: String!\r\n    $correo: String!\r\n    $estado: Enum_EstadoUsuario!\r\n  ) {\r\n    editarUsuario(\r\n      _id: $_id\r\n      nombre: $nombre\r\n      apellido: $apellido\r\n      identificacion: $identificacion\r\n      correo: $correo\r\n      estado: $estado\r\n    ) {\r\n      _id\r\n      nombre\r\n      apellido\r\n      correo\r\n      estado\r\n      identificacion\r\n      rol\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDITAR_PERFIL = gql`\r\n  mutation EditarPerfil($_id: String!, $campos: CamposEditarPerfil!) {\r\n    editarPerfil(_id: $_id, campos: $campos) {\r\n      _id\r\n      nombre\r\n      apellido\r\n      identificacion\r\n      foto\r\n    }\r\n  }\r\n`;\r\n\r\nexport { EDITAR_USUARIO, EDITAR_PERFIL };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst DropDown = ({ label, name, defaultValue = '', required, options }) => {\r\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\r\n  const optionsSelect = [\r\n    ['', 'Seleccione una opción', true],\r\n    ...Object.entries(options),\r\n  ];\r\n  useEffect(() => {\r\n    setSelectedValue(defaultValue);\r\n  }, [defaultValue]);\r\n  return (\r\n    <label htmlFor={name} className='flex flex-col my-3'>\r\n      <span>{label}</span>\r\n      <select\r\n        required={required}\r\n        name={name}\r\n        className='input'\r\n        value={selectedValue}\r\n        onChange={(e) => setSelectedValue(e.target.value)}\r\n      >\r\n        {' '}\r\n        {optionsSelect.map((o) => (\r\n          <option key={nanoid()} value={o[0]} disabled={o[2] ?? false}>\r\n            {o[1]}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\nexport default DropDown;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_USUARIO } from 'graphql/usuarios/queries';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { toast } from 'react-toastify';\r\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\r\nimport DropDown from 'components/DropDown';\r\nimport { Enum_EstadoUsuario } from 'utils/enums';\r\n\r\nconst EditarUsuario = () => {\r\n  const { form, formData, updateFormData } = useFormData(null);\r\n  const { _id } = useParams();\r\n  const {\r\n    data: queryData,\r\n    error: queryError,\r\n    loading: queryLoading,\r\n  } = useQuery(GET_USUARIO, {\r\n    variables: { _id },\r\n  });\r\n\r\n  const [\r\n    editarUsuario,\r\n    { data: mutationData, loading: mutationLoading, error: mutationError },\r\n  ] = useMutation(EDITAR_USUARIO);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    delete formData.rol;\r\n    editarUsuario({\r\n      variables: { _id, ...formData },\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (mutationData) {\r\n      toast.success('Usuario modificado correctamente');\r\n    }\r\n  }, [mutationData]);\r\n  useEffect(() => {\r\n    if (mutationError) {\r\n      toast.error('Error modificando el usuario');\r\n    }\r\n    if (queryError) {\r\n      toast.error('Error consultando el usuario');\r\n    }\r\n  }, [queryError, mutationError]);\r\n  if (queryLoading) return <div>Cargando....</div>;\r\n  return (\r\n    <div className='flew flex-col w-full h-full items-center justify-center p-10'>\r\n      <Link to='/usuarios'>\r\n        <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\r\n      </Link>\r\n      <h1 className='m-4 text-3xl text-gray-800 font-bold text-center'>\r\n        Editar Usuario\r\n      </h1>\r\n      <form\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n        className='flex flex-col items-center justify-center'\r\n      >\r\n        <Input\r\n          label='Nombre de la persona:'\r\n          type='text'\r\n          name='nombre'\r\n          defaultValue={queryData.Usuario.nombre}\r\n          required\r\n        />\r\n        <Input\r\n          label='Apellido de la persona:'\r\n          type='text'\r\n          name='apellido'\r\n          defaultValue={queryData.Usuario.apellido}\r\n          required\r\n        />\r\n        <Input\r\n          label='Correo de la persona:'\r\n          type='email'\r\n          name='correo'\r\n          defaultValue={queryData.Usuario.correo}\r\n          required\r\n        />\r\n        <Input\r\n          label='Identificación de la persona:'\r\n          type='text'\r\n          name='identificacion'\r\n          defaultValue={queryData.Usuario.identificacion}\r\n          required\r\n        />\r\n        <DropDown\r\n          label='Estado de la persona:'\r\n          name='estado'\r\n          defaultValue={queryData.Usuario.estado}\r\n          required\r\n          options={Enum_EstadoUsuario}\r\n        />\r\n        <span>Rol del usuario: {queryData.Usuario.rol}</span>\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={mutationLoading}\r\n          text='Confirmar'\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default EditarUsuario;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst AuthLayout = () => (\r\n  <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\r\n    <div className='flex w-full h-full'>\r\n      <div className='w-full h-full  overflow-y-scroll'>\r\n        Layout de Autenticacion Desplegado\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AuthLayout;\r\n","import React, { useEffect } from 'react';\r\nimport Input from 'components/Input';\r\nimport { Enum_Rol } from 'utils/enums';\r\nimport DropDown from 'components/DropDown';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { REGISTRO } from 'graphql/auth/mutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport { useAuth } from 'context/authContext';\r\n\r\nconst Register = () => {\r\n  const { setToken } = useAuth();\r\n  const navigate = useNavigate();\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [registro, { data: dataMutation }] = useMutation(REGISTRO);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    registro({ variables: formData });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      if (dataMutation.registro.token) {\r\n        setToken(dataMutation.registro.token);\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [dataMutation, setToken, navigate]);\r\n  return (\r\n    <div className='flex flex-col h-full w-full items-center justify-center'>\r\n      <h1 className='text-3xl font-bold my-4'>Regístrate</h1>\r\n      <form\r\n        className='flex flex-col'\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n      >\r\n        <div className='grid grid-cols-2 gap-5'>\r\n          <Input label='Nombre:' name='nombre' type='text' required />\r\n          <Input label='Apellido:' name='apellido' type='text' required />\r\n          <Input\r\n            label='Documento:'\r\n            name='identificacion'\r\n            type='text'\r\n            required\r\n          />\r\n          <DropDown\r\n            label='Rol deseado:'\r\n            name='rol'\r\n            required\r\n            options={Enum_Rol}\r\n          />\r\n          <Input label='Correo:' name='correo' type='email' required />\r\n          <Input label='Contraseña:' name='password' type='password' required />\r\n        </div>\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={false}\r\n          text='Registrarme'\r\n        />\r\n      </form>\r\n      <span>¿Ya tienes una cuenta?</span>\r\n      <Link to='/auth/login'>\r\n        <span className='text-blue-700'>Inicia sesión</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","import React, { useEffect } from 'react';\r\nimport Input from 'components/Input';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN } from 'graphql/auth/mutations';\r\nimport { useAuth } from 'context/authContext';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const { setToken } = useAuth();\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [login, { data: dataMutation, loading: mutationLoading }] =\r\n    useMutation(LOGIN);\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    login({\r\n      variables: formData,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      if (dataMutation.login.token) {\r\n        setToken(dataMutation.login.token);\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [dataMutation, setToken, navigate]);\r\n  return (\r\n    <div className='flex flex-col items-center justify-center w-full h-full p-10'>\r\n      <h1 className='text-xl font-bold text-gray-900'>Iniciar sesión</h1>\r\n      <form\r\n        className='flex flex-col'\r\n        onSubmit={submitForm}\r\n        onChange={updateFormData}\r\n        ref={form}\r\n      >\r\n        <Input name='correo' type='email' label='Correo' required />\r\n        <Input name='password' type='password' label='Contraseña' required />\r\n        <ButtonLoading\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={mutationLoading}\r\n          text='Iniciar Sesión'\r\n        />\r\n      </form>\r\n      <span>¿No tienes una cuenta?</span>\r\n      <Link to='/auth/register'>\r\n        <span className='text-blue-700'>Regístrate</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst PROYECTOS = gql`\r\n  query Proyectos {\r\n    Proyectos {\r\n      _id\r\n      nombre\r\n      estado\r\n      objetivos {\r\n        _id\r\n        descripcion\r\n        tipo\r\n      }\r\n      lider {\r\n        _id\r\n        correo\r\n      }\r\n\r\n      inscripciones {\r\n        estado\r\n        estudiante {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { PROYECTOS };\r\n","import { gql } from '@apollo/client';\r\n\r\nconst EDITAR_PROYECTO = gql`\r\n  mutation Mutation($_id: String!, $campos: camposProyecto!) {\r\n    editarProyecto(_id: $_id, campos: $campos) {\r\n      _id\r\n      estado\r\n    }\r\n  }\r\n`;\r\nconst CREAR_PROYECTO = gql`\r\n  mutation CrearProyecto(\r\n    $nombre: String!\r\n    $presupuesto: Float!\r\n    $fechaInicio: Date!\r\n    $fechaFin: Date!\r\n    $lider: String!\r\n    $objetivos: [crearObjetivo]\r\n  ) {\r\n    crearProyecto(\r\n      nombre: $nombre\r\n      presupuesto: $presupuesto\r\n      fechaInicio: $fechaInicio\r\n      fechaFin: $fechaFin\r\n      lider: $lider\r\n      objetivos: $objetivos\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDITAR_OBJETIVO = gql`\r\n  mutation EditarObjetivo(\r\n    $idProyecto: String!\r\n    $indexObjetivo: Int!\r\n    $campos: camposObjetivo!\r\n  ) {\r\n    editarObjetivo(\r\n      idProyecto: $idProyecto\r\n      indexObjetivo: $indexObjetivo\r\n      campos: $campos\r\n    ) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst ELIMINAR_OBJETIVO = gql`\r\n  mutation Mutation($idProyecto: String!, $idObjetivo: String!) {\r\n    eliminarObjetivo(idProyecto: $idProyecto, idObjetivo: $idObjetivo) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport { EDITAR_PROYECTO, CREAR_PROYECTO, ELIMINAR_OBJETIVO, EDITAR_OBJETIVO };\r\n","import { gql } from '@apollo/client';\r\n\r\nconst CREAR_INSCRIPCION = gql`\r\n  mutation Mutation($proyecto: String!, $estudiante: String!) {\r\n    crearInscripcion(proyecto: $proyecto, estudiante: $estudiante) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst APROBAR_INSCRIPCION = gql`\r\n  mutation AprobarInscripcion($aprobarInscripcionId: String!) {\r\n    aprobarInscripcion(id: $aprobarInscripcionId) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nexport { CREAR_INSCRIPCION, APROBAR_INSCRIPCION };\r\n","import Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst AccordionStyled = styled((props) => <Accordion {...props} />)(() => ({\r\n  backgroundColor: '#919191',\r\n}));\r\nconst AccordionSummaryStyled = styled((props) => (\r\n  <AccordionSummary {...props} />\r\n))(() => ({\r\n  backgroundColor: '#919191',\r\n}));\r\nconst AccordionDetailsStyled = styled((props) => (\r\n  <AccordionDetails {...props} />\r\n))(() => ({\r\n  backgroundColor: '#ccc',\r\n}));\r\n\r\nexport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { PROYECTOS } from 'graphql/proyectos/queries';\r\nimport DropDown from 'components/DropDown';\r\nimport Input from 'components/Input';\r\nimport { Dialog } from '@mui/material';\r\nimport { Enum_EstadoProyecto, Enum_TipoObjetivo } from 'utils/enums';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport {\r\n  EDITAR_PROYECTO,\r\n  ELIMINAR_OBJETIVO,\r\n  EDITAR_OBJETIVO,\r\n} from 'graphql/proyectos/mutations';\r\nimport useFormData from 'hooks/useFormData';\r\nimport PrivateComponent from 'components/PrivateComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { CREAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\r\nimport { useUser } from 'context/userContext';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AccordionStyled,\r\n  AccordionSummaryStyled,\r\n  AccordionDetailsStyled,\r\n} from 'components/Accordion';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst IndexProyectos = () => {\r\n  const { data: queryData, loading } = useQuery(PROYECTOS);\r\n  if (loading) return <div>Cargando...</div>;\r\n\r\n  if (queryData.Proyectos) {\r\n    return (\r\n      <div className='p-10 flex flex-col'>\r\n        <div className='flex w-full items-center justify-center'>\r\n          <h1 className='text-2xl font-bold text-gray-900'>\r\n            Lista de Proyectos\r\n          </h1>\r\n        </div>\r\n        <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}>\r\n          <div className='my-2 self-end'>\r\n            <button\r\n              type='button'\r\n              className='bg-indigo-500 text-gray-50 p-2 rounded-lg shadow-lg hover:bg-indigo-400'\r\n            >\r\n              <Link to='/proyectos/nuevo'>Crear nuevo proyecto</Link>\r\n            </button>\r\n          </div>\r\n        </PrivateComponent>\r\n        {queryData.Proyectos.map((proyecto) => (\r\n          <AccordionProyecto proyecto={proyecto} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\nconst AccordionProyecto = ({ proyecto }) => {\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  return (\r\n    <>\r\n      <AccordionStyled>\r\n        <AccordionSummaryStyled\r\n          expandIcon={<i className='fas fa-chevron-down' />}\r\n        >\r\n          <div className='flex w-full justify-between'>\r\n            <div className='uppercase font-bold text-gray-100 '>\r\n              {proyecto.nombre} - {proyecto.estado}\r\n            </div>\r\n          </div>\r\n        </AccordionSummaryStyled>\r\n        <AccordionDetailsStyled>\r\n          <PrivateComponent roleList={['ADMINISTRADOR']}>\r\n            <button\r\n              type='button'\r\n              onClick={() => {\r\n                setShowDialog(true);\r\n              }}\r\n            >\r\n              <i className='mx-4 fas fa-pen text-yellow-600 hover:text-yellow-400' />\r\n            </button>\r\n          </PrivateComponent>\r\n          <PrivateComponent roleList={['ESTUDIANTE']}>\r\n            <InscripcionProyecto\r\n              idProyecto={proyecto._id}\r\n              estado={proyecto.estado}\r\n              inscripciones={proyecto.inscripciones}\r\n            />\r\n          </PrivateComponent>\r\n          <div>Liderado Por: {proyecto.lider.correo}</div>\r\n          <div className='flex'>\r\n            {proyecto.objetivos.map((objetivo, index) => (\r\n              <Objetivo\r\n                index={index}\r\n                _id={objetivo._id}\r\n                idProyecto={proyecto._id}\r\n                tipo={objetivo.tipo}\r\n                descripcion={objetivo.descripcion}\r\n              />\r\n            ))}\r\n          </div>\r\n        </AccordionDetailsStyled>\r\n      </AccordionStyled>\r\n      <Dialog\r\n        open={showDialog}\r\n        onClose={() => {\r\n          setShowDialog(false);\r\n        }}\r\n      >\r\n        <FormEditProyecto _id={proyecto._id} />\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FormEditProyecto = ({ _id }) => {\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [editarProyecto, { loading }] = useMutation(EDITAR_PROYECTO);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    editarProyecto({\r\n      variables: {\r\n        _id,\r\n        campos: formData,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className='p-4'>\r\n      <h1 className='font-bold'>Modificar Estado del Proyecto</h1>\r\n      <form\r\n        ref={form}\r\n        onChange={updateFormData}\r\n        onSubmit={submitForm}\r\n        className='flex flex-col items-center'\r\n      >\r\n        <DropDown\r\n          label='Estado del Proyecto'\r\n          name='estado'\r\n          options={Enum_EstadoProyecto}\r\n        />\r\n        <ButtonLoading disabled={false} loading={loading} text='Confirmar' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Objetivo = ({ index, _id, idProyecto, tipo, descripcion }) => {\r\n  const [showEditDialog, setShowEditDialog] = useState(false);\r\n  const [\r\n    eliminarObjetivo,\r\n    { data: dataMutationEliminar, loading: eliminarLoading },\r\n  ] = useMutation(ELIMINAR_OBJETIVO, {\r\n    refetchQueries: [{ query: PROYECTOS }],\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataMutationEliminar) {\r\n      toast.success('objetivo eliminado satisfactoriamente');\r\n    }\r\n  }, [dataMutationEliminar]);\r\n  const ejecutarEliminacion = () => {\r\n    eliminarObjetivo({ variables: { idProyecto, idObjetivo: _id } });\r\n  };\r\n\r\n  if (eliminarLoading)\r\n    return (\r\n      <ReactLoading\r\n        data-testid='loading-in-button'\r\n        type='spin'\r\n        height={100}\r\n        width={100}\r\n      />\r\n    );\r\n  return (\r\n    <div className='mx-5 my-4 bg-gray-50 p-8 rounded-lg flex flex-col items-center justify-center shadow-xl'>\r\n      <div className='text-lg font-bold'>{tipo}</div>\r\n      <div>{descripcion}</div>\r\n      <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}>\r\n        <div className='flex my-2'>\r\n          <button type='button' onClick={() => setShowEditDialog(true)}>\r\n            <i className='fas fa-pen mx-2 text-yellow-500 hover:text-yellow-200 cursor-pointer' />\r\n          </button>\r\n          <button type='button' onClick={ejecutarEliminacion}>\r\n            <i className='fas fa-trash mx-2 text-red-500 hover:text-red-200 cursor-pointer' />\r\n          </button>\r\n        </div>\r\n        <Dialog open={showEditDialog} onClose={() => setShowEditDialog(false)}>\r\n          <EditarObjetivo\r\n            descripcion={descripcion}\r\n            tipo={tipo}\r\n            index={index}\r\n            idProyecto={idProyecto}\r\n            setShowEditDialog={setShowEditDialog}\r\n          />\r\n        </Dialog>\r\n      </PrivateComponent>\r\n    </div>\r\n  );\r\n};\r\nconst EditarObjetivo = ({\r\n  descripcion,\r\n  tipo,\r\n  index,\r\n  idProyecto,\r\n  setShowEditDialog,\r\n}) => {\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [editarObjetivo, { data: dataMutation, loading }] = useMutation(\r\n    EDITAR_OBJETIVO,\r\n    {\r\n      refetchQueries: [{ query: PROYECTOS }],\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      toast.success('Objetivo editado con exito');\r\n      setShowEditDialog(false);\r\n    }\r\n  }, [dataMutation, setShowEditDialog]);\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    editarObjetivo({\r\n      variables: {\r\n        idProyecto,\r\n        indexObjetivo: index,\r\n        campos: formData,\r\n      },\r\n    }).catch((error) => {\r\n      toast.error('Error editando el objetivo', error);\r\n    });\r\n  };\r\n  return (\r\n    <div className='p-4'>\r\n      <h1 className='text-2xl font-bold text-gray-900'>Editar Objetivo</h1>\r\n      <form ref={form} onChange={updateFormData} onSubmit={submitForm}>\r\n        <DropDown\r\n          label='Tipo de Objetivo'\r\n          name='tipo'\r\n          required\r\n          options={Enum_TipoObjetivo}\r\n          defaultValue={tipo}\r\n        />\r\n        <Input\r\n          label='Descripcion del objetivo'\r\n          name='descripcion'\r\n          required\r\n          defaultValue={descripcion}\r\n        />\r\n        <ButtonLoading\r\n          text='Confirmar'\r\n          disabled={Object.keys(formData).length === 0}\r\n          loading={loading}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InscripcionProyecto = ({ idProyecto, estado, inscripciones }) => {\r\n  const [estadoInscripcion, setEstadoInscripcion] = useState('');\r\n  const [crearInscripcion, { data, loading }] = useMutation(CREAR_INSCRIPCION);\r\n  const { userData } = useUser();\r\n\r\n  useEffect(() => {\r\n    if (userData && inscripciones) {\r\n      const flt = inscripciones.filter(\r\n        (el) => el.estudiante._id === userData._id\r\n      );\r\n      if (flt.length > 0) {\r\n        setEstadoInscripcion(flt[0].estado);\r\n      }\r\n    }\r\n  }, [userData, inscripciones]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('inscripcion creada con exito');\r\n    }\r\n  }, [data]);\r\n\r\n  const confirmarInscripcion = () => {\r\n    crearInscripcion({\r\n      variables: { proyecto: idProyecto, estudiante: userData._id },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {estadoInscripcion !== '' ? (\r\n        <span>\r\n          Ya estas inscrito en este proyecto y el estado es {estadoInscripcion}\r\n        </span>\r\n      ) : (\r\n        <ButtonLoading\r\n          onClick={() => confirmarInscripcion()}\r\n          disabled={estado === 'INACTIVO'}\r\n          loading={loading}\r\n          text='Inscribirme en este proyecto'\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default IndexProyectos;\r\n","import { createContext, useContext } from 'react';\r\n\r\nexport const ObjContext = createContext(null);\r\n\r\nexport const useObj = () => useContext(ObjContext);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport Input from 'components/Input';\r\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\r\nimport { Link } from 'react-router-dom';\r\nimport DropDown from 'components/DropDown';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { Enum_TipoObjetivo } from 'utils/enums';\r\nimport { nanoid } from 'nanoid';\r\nimport { useObj, ObjContext } from 'context/objContext';\r\nimport { CREAR_PROYECTO } from 'graphql/proyectos/mutations';\r\n\r\nconst NuevoProyecto = () => {\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const [listaUsuarios, setListaUsuarios] = useState({});\r\n  const { data, loading } = useQuery(GET_USUARIOS, {\r\n    variables: {\r\n      filtro: { rol: 'LIDER', estado: 'AUTORIZADO' },\r\n    },\r\n  });\r\n\r\n  const [crearProyecto] = useMutation(CREAR_PROYECTO);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const lu = {};\r\n      data.Usuarios.forEach((elemento) => {\r\n        lu[elemento._id] = elemento.correo;\r\n      });\r\n\r\n      setListaUsuarios(lu);\r\n    }\r\n  }, [data]);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    formData.objetivos = Object.values(formData.objetivos);\r\n    formData.presupuesto = parseFloat(formData.presupuesto);\r\n\r\n    crearProyecto({\r\n      variables: formData,\r\n    });\r\n  };\r\n\r\n  if (loading) return <div>...Loading</div>;\r\n\r\n  return (\r\n    <div className='p-10 flex flex-col items-center'>\r\n      <div className='self-start'>\r\n        <Link to='/proyectos'>\r\n          <i className='fas fa-arrow-left' />\r\n        </Link>\r\n      </div>\r\n      <h1 className='text-2xl font-bold text-gray-900'>Crear Nuevo Proyecto</h1>\r\n      <form ref={form} onChange={updateFormData} onSubmit={submitForm}>\r\n        <Input name='nombre' label='Nombre del Proyecto' required type='text' />\r\n        <Input\r\n          name='presupuesto'\r\n          label='Presupuesto del Proyecto'\r\n          required\r\n          type='number'\r\n        />\r\n        <Input\r\n          name='fechaInicio'\r\n          label='Fecha de Inicio'\r\n          required\r\n          type='date'\r\n        />\r\n        <Input name='fechaFin' label='Fecha de Fin' required type='date' />\r\n        <DropDown label='Líder' options={listaUsuarios} name='lider' required />\r\n        <Objetivos />\r\n        <ButtonLoading text='Crear Proyecto' loading={false} disabled={false} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Objetivos = () => {\r\n  const [listaObjetivos, setListaObjetivos] = useState([]);\r\n  const [maxObjetivos, setMaxObjetivos] = useState(false);\r\n\r\n  const eliminarObjetivo = (id) => {\r\n    setListaObjetivos(listaObjetivos.filter((el) => el.props.id !== id));\r\n  };\r\n\r\n  const componenteObjetivoAgregado = () => {\r\n    const id = nanoid();\r\n    return <FormObjetivo key={id} id={id} />;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listaObjetivos.length > 4) {\r\n      setMaxObjetivos(true);\r\n    } else {\r\n      setMaxObjetivos(false);\r\n    }\r\n  }, [listaObjetivos]);\r\n\r\n  return (\r\n    <ObjContext.Provider value={{ eliminarObjetivo }}>\r\n      <div>\r\n        <span>Objetivos del Proyecto</span>\r\n        {!maxObjetivos && (\r\n          <button\r\n            type='button'\r\n            onClick={() =>\r\n              setListaObjetivos([\r\n                ...listaObjetivos,\r\n                componenteObjetivoAgregado(),\r\n              ])\r\n            }\r\n          >\r\n            <i className='fas fa-plus rounded-full bg-green-500 hover:bg-green-400 text-white p-2 mx-2 cursor-pointer' />\r\n          </button>\r\n        )}\r\n        {listaObjetivos.map((objetivo) => objetivo)}\r\n      </div>\r\n    </ObjContext.Provider>\r\n  );\r\n};\r\n\r\nconst FormObjetivo = ({ id }) => {\r\n  const { eliminarObjetivo } = useObj();\r\n  return (\r\n    <div className='flex items-center'>\r\n      <Input\r\n        name={`nested||objetivos||${id}||descripcion`}\r\n        label='Descripción'\r\n        type='text'\r\n        required\r\n      />\r\n      <DropDown\r\n        name={`nested||objetivos||${id}||tipo`}\r\n        options={Enum_TipoObjetivo}\r\n        label='Tipo de Objetivo'\r\n        required\r\n      />\r\n      <button type='button' onClick={() => eliminarObjetivo(id)}>\r\n        <i className='fas fa-minus rounded-full bg-red-500 hover:bg-red-400 text-white p-2 mx-2 cursor-pointer mt-6' />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default NuevoProyecto;\r\n","import { gql } from '@apollo/client';\r\n\r\nconst GET_INSCRIPCIONES = gql`\r\n  query Inscripciones {\r\n    Inscripciones {\r\n      _id\r\n      estado\r\n      estudiante {\r\n        _id\r\n        nombre\r\n        apellido\r\n        correo\r\n      }\r\n      proyecto {\r\n        _id\r\n        nombre\r\n        lider {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_INSCRIPCIONES };\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\r\nimport { APROBAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  AccordionStyled,\r\n  AccordionSummaryStyled,\r\n  AccordionDetailsStyled,\r\n} from 'components/Accordion';\r\n\r\nconst IndexInscripciones = () => {\r\n  const { data, loading, refetch } = useQuery(GET_INSCRIPCIONES);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  return (\r\n    <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\r\n      <div className='p-10'>\r\n        <div>Pagina de inscripciones</div>\r\n        <div className='my-4'>\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones aprobadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'ACEPTADO')}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones pendientes'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'PENDIENTE')}\r\n            refetch={refetch}\r\n          />\r\n          <AccordionInscripcion\r\n            titulo='Inscripciones rechazadas'\r\n            data={data.Inscripciones.filter((el) => el.estado === 'RECHAZADO')}\r\n          />\r\n        </div>\r\n      </div>\r\n    </PrivateRoute>\r\n  );\r\n};\r\n\r\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => (\r\n  <AccordionStyled>\r\n    <AccordionSummaryStyled>\r\n      {titulo} ({data.length})\r\n    </AccordionSummaryStyled>\r\n    <AccordionDetailsStyled>\r\n      <div className='flex'>\r\n        {data &&\r\n          data.map((inscripcion) => (\r\n            <Inscripcion inscripcion={inscripcion} refetch={refetch} />\r\n          ))}\r\n      </div>\r\n    </AccordionDetailsStyled>\r\n  </AccordionStyled>\r\n);\r\n\r\nconst Inscripcion = ({ inscripcion, refetch }) => {\r\n  const [aprobarInscripcion, { data, loading, error }] =\r\n    useMutation(APROBAR_INSCRIPCION);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Inscripcion aprobada con exito');\r\n      refetch();\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Error aprobando la inscripcion');\r\n    }\r\n  }, [error]);\r\n\r\n  const cambiarEstadoInscripcion = () => {\r\n    aprobarInscripcion({\r\n      variables: {\r\n        aprobarInscripcionId: inscripcion._id,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl'>\r\n      <span>{inscripcion.proyecto.nombre}</span>\r\n      <span>{inscripcion.estudiante.nombre}</span>\r\n      <span>{inscripcion.estado}</span>\r\n      {inscripcion.estado === 'PENDIENTE' && (\r\n        <ButtonLoading\r\n          onClick={() => {\r\n            cambiarEstadoInscripcion();\r\n          }}\r\n          text='Aprobar Inscripcion'\r\n          loading={loading}\r\n          disabled={false}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexInscripciones;\r\n","import axios from 'axios';\r\n\r\nconst uploadFormData = async (formData) => {\r\n  const formDataCopy = { ...formData };\r\n  await Promise.all(\r\n    Object.keys(formDataCopy).map(async (field) => {\r\n      if (\r\n        Object.prototype.isPrototypeOf.call(File.prototype, formData[field])\r\n      ) {\r\n        const dt = new FormData();\r\n        dt.append('file', formDataCopy[field]);\r\n        dt.append('upload_preset', 'ahqpbehg');\r\n        dt.append('cloud_name', 'misiontic2022');\r\n        const options = {\r\n          method: 'POST',\r\n          url: 'https://api.cloudinary.com/v1_1/misiontic2022/image/upload',\r\n          data: dt,\r\n        };\r\n        await axios.request(options).then((response) => {\r\n          formDataCopy[field] = response.data.url;\r\n        });\r\n      }\r\n    })\r\n  );\r\n  return formDataCopy;\r\n};\r\n\r\nexport { uploadFormData };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport ButtonLoading from 'components/ButtonLoading';\r\nimport Input from 'components/Input';\r\nimport { EDITAR_PERFIL } from 'graphql/usuarios/mutations';\r\nimport useFormData from 'hooks/useFormData';\r\nimport { uploadFormData } from 'utils/uploadFromData';\r\nimport { useUser } from 'context/userContext';\r\nimport { GET_USUARIO } from 'graphql/usuarios/queries';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Profile = () => {\r\n  const [editFoto, setEditFoto] = useState(false);\r\n  const { form, formData, updateFormData } = useFormData();\r\n  const { userData, setUserData } = useUser();\r\n\r\n  const [editarPerfil, { data: dataMutation, loading: loadingMutation }] =\r\n    useMutation(EDITAR_PERFIL);\r\n\r\n  const {\r\n    data: queryData,\r\n    loading: queryLoading,\r\n    refetch,\r\n  } = useQuery(GET_USUARIO, {\r\n    variables: {\r\n      _id: userData._id,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataMutation) {\r\n      setUserData({ ...userData, foto: dataMutation.editarPerfil.foto });\r\n      toast.success('Perfil modificado con exito');\r\n      refetch();\r\n    }\r\n  }, [dataMutation]);\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formUploaded = await uploadFormData(formData);\r\n\r\n    editarPerfil({\r\n      variables: {\r\n        _id: userData._id,\r\n        campos: formUploaded,\r\n      },\r\n    });\r\n  };\r\n\r\n  if (queryLoading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className='p-10 flex flex-col items-center justify-center w-full'>\r\n      <h1 className='font-bold text-2xl text-gray-900'>Perfil del usuario</h1>\r\n      <form ref={form} onChange={updateFormData} onSubmit={submitForm}>\r\n        <Input\r\n          defaultValue={queryData.Usuario.nombre}\r\n          label='Nombre'\r\n          name='nombre'\r\n          type='text'\r\n          required\r\n        />\r\n        <Input\r\n          defaultValue={queryData.Usuario.apellido}\r\n          label='Apellido'\r\n          name='apellido'\r\n          type='text'\r\n          required\r\n        />\r\n        <Input\r\n          defaultValue={queryData.Usuario.identificacion}\r\n          label='Identificación'\r\n          name='identificacion'\r\n          type='text'\r\n          required\r\n        />\r\n        {queryData.Usuario.foto && !editFoto ? (\r\n          <div className='flex flex-col items-center'>\r\n            <img\r\n              className='h-32'\r\n              src={queryData.Usuario.foto}\r\n              alt='Foto Usuario'\r\n            />\r\n            <button\r\n              type='button'\r\n              onClick={() => setEditFoto(true)}\r\n              className='bg-indigo-300 p-1 my-2 rounded-md text-white'\r\n            >\r\n              Cambiar imagen\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Input label='Foto' name='foto' type='file' required />\r\n            <button\r\n              type='button'\r\n              onClick={() => setEditFoto(false)}\r\n              className='bg-indigo-300 p-1 my-2 rounded-md text-white'\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        )}\r\n        <ButtonLoading\r\n          text='Confirmar'\r\n          loading={loadingMutation}\r\n          disabled={false}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\nconst IndexAvance = () => <div>Avances</div>;\r\n\r\n\r\nexport default IndexAvance;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PrivateLayout from 'layouts/PrivateLayout';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { UserContext } from 'context/userContext';\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  createHttpLink,\r\n  InMemoryCache,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Index from 'pages/Index';\r\nimport Page2 from 'pages/Page2';\r\nimport IndexCategory1 from 'pages/category1/Index';\r\nimport Category1 from 'pages/category1/CategoryPage1';\r\nimport IndexUsuarios from 'pages/usuarios';\r\nimport EditarUsuario from 'pages/usuarios/editar';\r\nimport AuthLayout from 'layouts/AuthLayout';\r\nimport Register from 'pages/auth/register';\r\nimport Login from 'pages/auth/login';\r\nimport { AuthContext } from 'context/authContext';\r\nimport IndexProyectos from 'pages/proyectos/Index';\r\nimport jwt_decode from 'jwt-decode';\r\nimport 'styles/globals.css';\r\nimport 'styles/tabla.css';\r\nimport NuevoProyecto from 'pages/proyectos/NuevoProyecto';\r\nimport IndexInscripciones from 'pages/inscripciones';\r\nimport Profile from 'pages/profile';\r\nimport IndexAvance from 'pages/avances';\r\n\r\n// import PrivateRoute from 'components/PrivateRoute';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'https://back-grapql-misionciclo4.herokuapp.com/graphql',\r\n\r\n});\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: authLink.concat(httpLink),\r\n});\r\nfunction App() {\r\n  const [userData, setUserData] = useState({});\r\n  const [authToken, setAuthToken] = useState('');\r\n  const setToken = (token) => {\r\n    setAuthToken(token);\r\n    if (token) {\r\n      localStorage.setItem('token', JSON.stringify(token));\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (authToken) {\r\n      const decoded = jwt_decode(authToken);\r\n      setUserData({\r\n        _id: decoded._id,\r\n        nombre: decoded.nombre,\r\n        apellido: decoded.apellido,\r\n        identificacion: decoded.identificacion,\r\n        correo: decoded.correo,\r\n        rol: decoded.rol,\r\n        foto: decoded.foto,\r\n      });\r\n    }\r\n  }, [authToken]);\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AuthContext.Provider value={{ authToken, setAuthToken, setToken }}>\r\n        <UserContext.Provider value={{ userData, setUserData }}>\r\n          <BrowserRouter>\r\n            <Routes>\r\n              <Route path='/' element={<PrivateLayout />}>\r\n                <Route path='' element={<Index />} />\r\n                <Route path='/usuarios' element={<IndexUsuarios />} />\r\n                <Route\r\n                  path='/usuarios/editar/:_id'\r\n                  element={<EditarUsuario />}\r\n                />\r\n                <Route path='/proyectos' element={<IndexProyectos />} />\r\n                <Route path='/proyectos/nuevo' element={<NuevoProyecto />} />\r\n                <Route path='/inscripciones' element={<IndexInscripciones />} />\r\n                <Route path='/avances' element={<IndexAvance />} />\r\n                <Route path='/perfil' element={<Profile />} />\r\n                <Route path='page2' element={<Page2 />} />\r\n                <Route path='category1' element={<IndexCategory1 />} />\r\n                <Route path='category1/page1' element={<Category1 />} />\r\n              </Route>\r\n              <Route path='/auth' element={<AuthLayout />}>\r\n                <Route path='register' element={<Register />} />\r\n                <Route path='login' element={<Login />} />\r\n              </Route>\r\n            </Routes>\r\n          </BrowserRouter>\r\n        </UserContext.Provider>\r\n      </AuthContext.Provider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}